# -*- coding: utf-8 -*-
"""1.Librerias_proyecto.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KK5lIe5oz0c-FQ-5sH5BJnl_YfyqeBlV
"""

#@title **1.Importación de librerías para análisis, modelos y métricas Credit failure prediction**

#Instalar librerías Boosting (XGBoost, LightGBM y CatBoost)
!pip install -q pandas numpy scikit-learn xgboost lightgbm catboost imbalanced-learn shap matplotlib seaborn joblib

#Instalar optuna
!pip install optuna catboost xgboost lightgbm --quiet

# Manipulación de datos
import pandas as pd  # Procesar, analizar y limpiar datos
import numpy as np  # Operaciones matemáticas y manipulación de matrices

# Visualización de datos
import seaborn as sns  # Visualización de gráficos estadísticos
import matplotlib.pyplot as plt  # Generación de gráficos

# Preprocesamiento y escalado
from sklearn.model_selection import train_test_split  # División en Train/Test
from sklearn.preprocessing import StandardScaler, RobustScaler  # Normalización y escalado
from sklearn.compose import ColumnTransformer  # Transformaciones por columnas
from sklearn.base import BaseEstimator, TransformerMixin # Creación de transformadores personalizados
import optuna # Optimización de hiperparámetros

# Modelos de clasificación (Boosting)
from xgboost import XGBClassifier  # Boosting optimizado
from lightgbm import LGBMClassifier  # Boosting eficiente en grandes datos
from catboost import CatBoostClassifier  # Boosting robusto para datos categóricos

# Evaluación de modelos
from sklearn.metrics import (
    roc_auc_score, accuracy_score, precision_score, recall_score, f1_score, classification_report
)
from sklearn.ensemble import VotingClassifier # Combinación de modelos

# Balanceo de datos desbalanceados
from imblearn.over_sampling import SMOTE  # Técnica para generar datos sintéticos en clases minoritarias

# Interpretabilidad del modelo
import shap  # Explicación de impacto de características en modelos

# Gestión de almacenamiento
import joblib  # Guardado y carga de modelos entrenados

print("Librerías cargadas correctamente.")